#!/bin/bash

# Get the absolute path of the script's directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Check if required arguments are provided
if [ $# -lt 2 ]; then
    echo ">> Usage: docker-stack <service-name> <action>"
    echo ">> Example: docker-stack jupyter run"
    exit 1
fi

# Get the service name and action from arguments
SERVICE_NAME=$1
ACTION=$2

# Use absolute paths for service directory
SERVICE_DIR="$SCRIPT_DIR/$SERVICE_NAME"

# Check if the service directory exists
if [ ! -d "$SERVICE_DIR" ]; then
    echo ">> Error: Service directory '$SERVICE_NAME' not found in $SCRIPT_DIR"
    exit 1
fi

# Handle Windows paths in Git Bash
if [[ "$OSTYPE" == "msys" ]]; then
    # Convert Windows path to Docker-compatible path
    export HOST_WORKDIR="$(pwd -W)"
    # Disable MSYS path conversion
    export MSYS_NO_PATHCONV=1
else
    export HOST_WORKDIR="$(pwd)"
fi

echo ">> Host working directory: $HOST_WORKDIR"

# Check if the action script exists in service directory
if [ -f "$SERVICE_DIR/${ACTION}.sh" ]; then
    echo ">> Executing $SERVICE_DIR/${ACTION}.sh..."
    (cd "$SERVICE_DIR" && bash "${ACTION}.sh" "${@:3}")
elif [ -f "$SCRIPT_DIR/common/${ACTION}.sh" ]; then
    echo ">> Executing $SCRIPT_DIR/common/${ACTION}.sh"
    (cd "$SERVICE_DIR" && bash "$SCRIPT_DIR/common/${ACTION}.sh" "${@:3}")
else
    echo ">> Error: Action script '${ACTION}.sh' not found"
    exit 1
fi