# This is a default site configuration which will simply return 404, preventing
# chance access to any other virtualhost.

server {
	listen 80 default_server;
	listen [::]:80 default_server;

    resolver 127.0.0.11 valid=1s ipv6=off;
    access_by_lua_block {
        local opts = {
            redirect_uri_path = "/redirect_uri",
            discovery = "http://host.docker.internal:7223/realms/fztest/.well-known/openid-configuration",
            client_id = "fztestclient",
            client_secret = "Wj4bwN10vP9PjK8aI9JZ5pb1BEEr0jwr",
            redirect_uri_scheme = "http",
            logout_path = "/logout",
            redirect_after_logout_uri = "http://localhost:7223/auth/realms/myrealm/protocol/openid-connect/logout?redirect_uri=http://localhost:7222/",
            redirect_after_logout_with_id_token_hint = false,
            session_contents = {id_token=true}
        }
        -- call introspect for OAuth 2.0 Bearer Access Token validation
        local res, err = require("resty.openidc").authenticate(opts)
        if err then
            ngx.status = 403
            ngx.say(err)
            ngx.exit(ngx.HTTP_FORBIDDEN)
        end
    }

    # I disabled caching so the browser won't cache the site.
    expires           0;
    add_header        Cache-Control private;

    location /jupyterlab {
        rewrite /jupyterlab/(.*) /$1  break;
        proxy_redirect /login jupyterlab/login;
        proxy_redirect /lab jupyterlab/lab;
		proxy_pass http://host.docker.internal:7801/;
	    proxy_set_header X-Forwarded-For $remote_addr;
    }

    location /static {
		proxy_pass http://host.docker.internal:7801/static;
    }

	location /tailwind {
#         auth_request /internal-auth;
		proxy_pass http://testapp/tailwind;
	    proxy_set_header X-Forwarded-For $remote_addr;
    }

	location = /internal-auth {
		internal;
		# proxy_pass http://keycloak:8080/;
		proxy_pass http://testapp/auth;
		proxy_pass_request_body off;
		proxy_pass_request_headers on;
    	proxy_set_header Content-Length "";
		proxy_set_header X-Original-URI $request_uri;
	}

	# Everything is a 404
	# location / {
	# 	return 404;
	# }

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}
}

